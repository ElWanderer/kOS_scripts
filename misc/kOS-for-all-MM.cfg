// v1.0.1 20200807

//======================================================
// ADD kOS PROCESSORS (AND PROBE CORES) TO COMMAND PODS
//======================================================

// Add a version of the Mk1 Command Pod with enhanced battery storage, integrated probe core and kOS processor for operations without crew aboard
+PART[mk1pod_v2]:NEEDS[kOS]:Final
{
    @name = mk1pod_v2_autonomous
    @title = Mk1 Command Pod (Autonomous)
    @description = A Mk1 Command Pod with enhanced battery storage, integrated probe core and kOS processor for operations without crew aboard
    
    @cost = 1200
    @mass = 0.86
    
	@MODULE[ModuleCommand]
	{
		@minimumCrew = 0
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.020
		}
		hasHibernation = True
        hibernationMultiplier = 0.01
	}
    
    @RESOURCE[ElectricCharge]
	{
		@amount = 250
		@maxAmount = 250
	}
    
    MODULE
    {
        name = ModuleSAS
		SASServiceLevel = 1
    }
    
    MODULE
	{
		name = kOSProcessor
		diskSpace = 50000
	}
}

// Add a version of the Mk1-3 Command Pod with enhanced battery storage, integrated probe core and kOS processor for operations without crew aboard
+PART[mk1-3pod]:NEEDS[kOS]:Final
{
    @name = mk1-3pod_autonomous
    @title = Mk1-3 Command Pod (Autonomous)
    @description = A Mk1-3 Command Pod with enhanced battery storage, integrated probe core and kOS processor for operations without crew aboard
    
    @cost = 5000
    @mass = 2.67
    
	@MODULE[ModuleCommand]
	{
		@minimumCrew = 0
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.020
		}
		hasHibernation = True
        hibernationMultiplier = 0.01
	}
    
    @RESOURCE[ElectricCharge]
	{
		@amount = 550
		@maxAmount = 550
	}
    
    MODULE
    {
        name = ModuleSAS
		SASServiceLevel = 3
    }
    
    MODULE
	{
		name = kOSProcessor
		diskSpace = 200000
	}
}

// Add a version of the Mk1 Lander Can with enhanced battery storage, integrated probe core and kOS processor for operations without crew aboard
+PART[landerCabinSmall]:NEEDS[kOS]:Final
{
    @name = landerCabinSmall_autonomous
    @title = Mk1 Lander Can (Autonomous)
    @description = A Mk1 Lander Can with enhanced battery storage, integrated probe core and kOS processor for operations without crew aboard
    
    @cost = 2400
    @mass = 0.67
    
	@MODULE[ModuleCommand]
	{
		@minimumCrew = 0
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.020
		}
		hasHibernation = True
        hibernationMultiplier = 0.01
	}
    
    @RESOURCE[ElectricCharge]
	{
		@amount = 500
		@maxAmount = 500
	}
    
    MODULE
    {
        name = ModuleSAS
		SASServiceLevel = 2
    }
    
    MODULE
	{
		name = kOSProcessor
		diskSpace = 100000
	}
}

// Add a version of the Mk2 Lander Can Pod with enhanced battery storage, integrated probe core and kOS processor for operations without crew aboard
+PART[mk2LanderCabin_v2]:NEEDS[kOS]:Final
{
    @name = mk2LanderCabin_v2_autonomous
    @title = Mk2 Lander Can (Autonomous)
    @description = A Mk2 Lander Can with enhanced battery storage, integrated probe core and kOS processor for operations without crew aboard
    
    @cost = 4500
    @mass = 1.42
    
	@MODULE[ModuleCommand]
	{
		@minimumCrew = 0
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.020
		}
		hasHibernation = True
        hibernationMultiplier = 0.01
	}
    
    @RESOURCE[ElectricCharge]
	{
		@amount = 500
		@maxAmount = 500
	}
    
    MODULE
    {
        name = ModuleSAS
		SASServiceLevel = 3
    }
    
    MODULE
	{
		name = kOSProcessor
		diskSpace = 200000
	}
}

//============================================================================================
// ADD STACK CONTROLLERS (kOS PROCESSOR PLUS PROBE CORE, REACTION WHEEL, ANTENNA AND BATTERY)
//============================================================================================

+PART[kOSMachine1m]:NEEDS[kOS]:Final
{
    @name = ZX-R1-0625
	@category = Pods
	@title = ZX-R1-0625 0.625m Stack Controller
	@description = Would you trust life and limb to a mindless autopilot, powered by untested software you hastily wrote yourself? Spacefaring kerbals would!

    @rescaleFactor = 0.5
    @bulkheadProfiles = size0
    
    @cost = 1200
	@mass = 0.1
    
    %vesselType = Probe
    
    MODULE
	{
        name = ModuleCommand
		minimumCrew = 0
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.020
		}
		hasHibernation = True
        hibernationMultiplier = 0.01
        
        defaultControlPointDisplayName = #autoLOC_6011000 //#autoLOC_6011000 = Up
		CONTROLPOINT
		{
			name = forward
			displayName = #autoLOC_6011001 //#autoLOC_6011001 = Forward
			orientation = 90,0,0
		}
		CONTROLPOINT
		{
			name = reverse
			displayName = #autoLOC_6011004 //#autoLOC_6011004 = Reversed
			orientation = 0,0,180
		}
	}
    
    @RESOURCE[ElectricCharge]
	{
		@amount = 100
		@maxAmount = 100
	}
    
    MODULE
    {
        name = ModuleSAS
		SASServiceLevel = 1
    }
    
    @MODULE[kOSProcessor]
	{
		@diskSpace = 50000
	}
    
    MODULE
	{
		name = ModuleReactionWheel
		PitchTorque = 0.1
		YawTorque = 0.1
		RollTorque = 0.1
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.01
		}
	}
    
    MODULE
	{
		name = ModuleKerbNetAccess
		MinimumFoV = 25
		MaximumFoV = 45
		AnomalyDetection = 0
		DISPLAY_MODES
		{
			Mode = Terrain,#autoLOC_438839 //#autoLOC_438839 = Terrain
		}
	}

	MODULE
	{
		name = ModuleDataTransmitter
		antennaType = INTERNAL
		packetInterval = 1.0
		packetSize = 2
		packetResourceCost = 12.0
		requiredResource = ElectricCharge
		antennaPower = 5000
		optimumRange = 2500
		packetFloor = .1
		packetCeiling = 5
	}
}

+PART[kOSMachine1m]:NEEDS[kOS]:Final
{
    @name = ZX-R1-125
	@category = Pods
	@title = ZX-R1-125 1.25m Stack Controller
	@description = Would you trust life and limb to a mindless autopilot, powered by untested software you hastily wrote yourself? Spacefaring kerbals would!
    
    @cost = 1800
	@mass = 0.2
    
    %vesselType = Probe
    
    MODULE
	{
        name = ModuleCommand
		minimumCrew = 0
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.020
		}
		hasHibernation = True
        hibernationMultiplier = 0.01
        
        defaultControlPointDisplayName = #autoLOC_6011000 //#autoLOC_6011000 = Up
		CONTROLPOINT
		{
			name = forward
			displayName = #autoLOC_6011001 //#autoLOC_6011001 = Forward
			orientation = 90,0,0
		}
		CONTROLPOINT
		{
			name = reverse
			displayName = #autoLOC_6011004 //#autoLOC_6011004 = Reversed
			orientation = 0,0,180
		}
	}
    
    @RESOURCE[ElectricCharge]
	{
		@amount = 200
		@maxAmount = 200
	}
    
    MODULE
    {
        name = ModuleSAS
		SASServiceLevel = 1
    }
    
    @MODULE[kOSProcessor]
	{
		@diskSpace = 50000
	}
    
    MODULE
	{
		name = ModuleReactionWheel
		PitchTorque = 0.25
		YawTorque = 0.25
		RollTorque = 0.25
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.025
		}
	}

	MODULE
	{
		name = ModuleDataTransmitter
		antennaType = INTERNAL
		packetInterval = 1.0
		packetSize = 2
		packetResourceCost = 12.0
		requiredResource = ElectricCharge
		antennaPower = 5000
		optimumRange = 2500
		packetFloor = .1
		packetCeiling = 5
	}
    
    MODULE
	{
		name = ModuleKerbNetAccess
		MinimumFoV = 25
		MaximumFoV = 45
		AnomalyDetection = 0
		DISPLAY_MODES
		{
			Mode = Terrain,#autoLOC_438839 //#autoLOC_438839 = Terrain
		}
	}
}

+PART[kOSMachine1m]:NEEDS[kOS]:Final
{
    @name = ZX-R1-1875
	@category = Pods
	@title = ZX-R1-1875 1.875m Stack Controller
	@description = Would you trust life and limb to a mindless autopilot, powered by untested software you hastily wrote yourself? Spacefaring kerbals would!

    @rescaleFactor = 1.5
    @bulkheadProfiles = size1p5
    
    @cost = 2400
	@mass = 0.425
    
    %vesselType = Probe
    
    MODULE
	{
        name = ModuleCommand
		minimumCrew = 0
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.020
		}
		hasHibernation = True
        hibernationMultiplier = 0.01
        
        defaultControlPointDisplayName = #autoLOC_6011000 //#autoLOC_6011000 = Up
		CONTROLPOINT
		{
			name = forward
			displayName = #autoLOC_6011001 //#autoLOC_6011001 = Forward
			orientation = 90,0,0
		}
		CONTROLPOINT
		{
			name = reverse
			displayName = #autoLOC_6011004 //#autoLOC_6011004 = Reversed
			orientation = 0,0,180
		}
	}
    
    @RESOURCE[ElectricCharge]
	{
		@amount = 300
		@maxAmount = 300
	}
    
    MODULE
    {
        name = ModuleSAS
		SASServiceLevel = 1
    }
    
    @MODULE[kOSProcessor]
	{
		@diskSpace = 50000
	}
    
    MODULE
	{
		name = ModuleReactionWheel
		PitchTorque = 0.5
		YawTorque = 0.5
		RollTorque = 0.5
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.05
		}
	}
    
    MODULE
	{
		name = ModuleKerbNetAccess
		MinimumFoV = 25
		MaximumFoV = 45
		AnomalyDetection = 0
		DISPLAY_MODES
		{
			Mode = Terrain,#autoLOC_438839 //#autoLOC_438839 = Terrain
		}
	}

	MODULE
	{
		name = ModuleDataTransmitter
		antennaType = INTERNAL
		packetInterval = 1.0
		packetSize = 2
		packetResourceCost = 12.0
		requiredResource = ElectricCharge
		antennaPower = 5000
		optimumRange = 2500
		packetFloor = .1
		packetCeiling = 5
	}
}

+PART[kOSMachine1m]:NEEDS[kOS]:Final
{
    @name = ZX-R1-250
	@category = Pods
	@title = ZX-R1-250 2.5m Stack Controller
	@description = Would you trust life and limb to a mindless autopilot, powered by untested software you hastily wrote yourself? Spacefaring kerbals would!

    @rescaleFactor = 2
    @bulkheadProfiles = size2
    
    @cost = 3000
	@mass = 0.75
    
    %vesselType = Probe
    
    MODULE
	{
        name = ModuleCommand
		minimumCrew = 0
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.020
		}
		hasHibernation = True
        hibernationMultiplier = 0.01
        
        defaultControlPointDisplayName = #autoLOC_6011000 //#autoLOC_6011000 = Up
		CONTROLPOINT
		{
			name = forward
			displayName = #autoLOC_6011001 //#autoLOC_6011001 = Forward
			orientation = 90,0,0
		}
		CONTROLPOINT
		{
			name = reverse
			displayName = #autoLOC_6011004 //#autoLOC_6011004 = Reversed
			orientation = 0,0,180
		}
	}
    
    @RESOURCE[ElectricCharge]
	{
		@amount = 400
		@maxAmount = 400
	}
    
    MODULE
    {
        name = ModuleSAS
		SASServiceLevel = 1
    }
    
    @MODULE[kOSProcessor]
	{
		@diskSpace = 50000
	}
    
    MODULE
	{
		name = ModuleReactionWheel
		PitchTorque = 1
		YawTorque = 1
		RollTorque = 1
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.1
		}
	}
    
    MODULE
	{
		name = ModuleKerbNetAccess
		MinimumFoV = 25
		MaximumFoV = 45
		AnomalyDetection = 0
		DISPLAY_MODES
		{
			Mode = Terrain,#autoLOC_438839 //#autoLOC_438839 = Terrain
		}
	}

	MODULE
	{
		name = ModuleDataTransmitter
		antennaType = INTERNAL
		packetInterval = 1.0
		packetSize = 2
		packetResourceCost = 12.0
		requiredResource = ElectricCharge
		antennaPower = 5000
		optimumRange = 2500
		packetFloor = .1
		packetCeiling = 5
	}
}

+PART[kOSMachine1m]:NEEDS[kOS]:Final
{
    @name = ZX-R1-375
	@category = Pods
	@title = ZX-R1-375 3.75m Stack Controller
	@description = Would you trust life and limb to a mindless autopilot, powered by untested software you hastily wrote yourself? Spacefaring kerbals would!

    @rescaleFactor = 3
    @bulkheadProfiles = size3
    
    @cost = 5500
	@mass = 1.5
    
    %vesselType = Probe
    
    MODULE
	{
        name = ModuleCommand
		minimumCrew = 0
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.020
		}
		hasHibernation = True
        hibernationMultiplier = 0.01
        
        defaultControlPointDisplayName = #autoLOC_6011000 //#autoLOC_6011000 = Up
		CONTROLPOINT
		{
			name = forward
			displayName = #autoLOC_6011001 //#autoLOC_6011001 = Forward
			orientation = 90,0,0
		}
		CONTROLPOINT
		{
			name = reverse
			displayName = #autoLOC_6011004 //#autoLOC_6011004 = Reversed
			orientation = 0,0,180
		}
	}
    
    @RESOURCE[ElectricCharge]
	{
		@amount = 800
		@maxAmount = 800
	}
    
    MODULE
    {
        name = ModuleSAS
		SASServiceLevel = 1
    }
    
    @MODULE[kOSProcessor]
	{
		@diskSpace = 50000
	}
    
    MODULE
	{
		name = ModuleReactionWheel
		PitchTorque = 2
		YawTorque = 2
		RollTorque = 2
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.2
		}
	}
    
    MODULE
	{
		name = ModuleKerbNetAccess
		MinimumFoV = 25
		MaximumFoV = 45
		AnomalyDetection = 0
		DISPLAY_MODES
		{
			Mode = Terrain,#autoLOC_438839 //#autoLOC_438839 = Terrain
		}
	}

	MODULE
	{
		name = ModuleDataTransmitter
		antennaType = INTERNAL
		packetInterval = 1.0
		packetSize = 2
		packetResourceCost = 12.0
		requiredResource = ElectricCharge
		antennaPower = 5000
		optimumRange = 2500
		packetFloor = .1
		packetCeiling = 5
	}
}

// add 5m stack controller?
// TODO

// update the stock 1.25m probe core (RC-001S Remote Guidance Unit / probeStackSmall) to have more ElectricCharge?
// TODO

// update the stock 2.5m probe core (RC-L01 Remote Guidance Unit / probeStackLarge) to have more ElectricCharge
+PART[probeStackLarge]:NEEDS[kOS]:Final
{
    @name = probeStackLarge25
	@title = RC-XL25 Remote Guidance Unit
    
    @cost = 3500
	@mass = 0.51
    
    %vesselType = Probe
    
    @RESOURCE[ElectricCharge]
	{
		@amount = 400
		@maxAmount = 400
	}
    
	MODULE
	{
		name = kOSProcessor
		diskSpace = 200000
	}
}
// add 3.75m version of the stock 2.5m probe core (RC-L01 Remote Guidance Unit / probeStackLarge)
+PART[probeStackLarge]:NEEDS[kOS]:Final
{
    @name = probeStackLarge375
	@title = RC-XL37 Remote Guidance Unit

    @rescaleFactor = 1.5
    @bulkheadProfiles = size3
    
    @cost = 8000
	@mass = 1.5
    
    %vesselType = Probe
    
    @RESOURCE[ElectricCharge]
	{
		@amount = 800
		@maxAmount = 800
	}
    
	MODULE
	{
		name = kOSProcessor
		diskSpace = 200000
	}
    
    @MODULE
	{
		@name = ModuleReactionWheel
		@PitchTorque = 5
		@YawTorque = 5
		@RollTorque = 5
		@RESOURCE
		{
			@name = ElectricCharge
			@rate = 0.5
		}
	}
}

// add 5m version of the stock 2.5m probe core (RC-L01 Remote Guidance Unit / probeStackLarge)
+PART[probeStackLarge]:NEEDS[kOS]:Final
{
    @name = probeStackLarge5
	@title = RC-XXL5 Remote Guidance Unit

    @rescaleFactor = 2
    @bulkheadProfiles = size4
    
    @cost = 10000
	@mass = 3.5
    
    %vesselType = Probe
    
    @RESOURCE[ElectricCharge]
	{
		@amount = 2000
		@maxAmount = 2000
	}
    
	MODULE
	{
		name = kOSProcessor
		diskSpace = 200000
	}
    
    @MODULE
	{
		@name = ModuleReactionWheel
		@PitchTorque = 8
		@YawTorque = 8
		@RollTorque = 8
		@RESOURCE
		{
			@name = ElectricCharge
			@rate = 0.8
		}
	}
}

//=================================================
// ADD kOS PROCESSORS TO EXISTING PROBE CORE PARTS
//=================================================
//
// Add kOS processors to probe cores, with the disk size based on the SAS ability
// This means the Stayputnik does not receive a kOS processor
//
@PART[*]:HAS[@MODULE[ModuleCommand],@MODULE[ModuleCommand]:HAS[#minimumCrew[0]],@MODULE[ModuleSAS]:HAS[#SASServiceLevel[3]],!MODULE[kOSProcessor]]:NEEDS[kOS]:Final
{
	MODULE
	{
		name = kOSProcessor
		diskSpace = 200000
	}
}

@PART[*]:HAS[@MODULE[ModuleCommand],@MODULE[ModuleCommand]:HAS[#minimumCrew[0]],@MODULE[ModuleSAS]:HAS[#SASServiceLevel[2]],!MODULE[kOSProcessor]]:NEEDS[kOS]:Final
{
	MODULE
	{
		name = kOSProcessor
		diskSpace = 100000
	}
}

@PART[*]:HAS[@MODULE[ModuleCommand],@MODULE[ModuleCommand]:HAS[#minimumCrew[0]],@MODULE[ModuleSAS]:HAS[#SASServiceLevel[1]],!MODULE[kOSProcessor]]:NEEDS[kOS]:Final
{
	MODULE
	{
		name = kOSProcessor
		diskSpace = 50000
	}
}

@PART[*]:HAS[@MODULE[ModuleCommand],@MODULE[ModuleCommand]:HAS[#minimumCrew[0]],@MODULE[ModuleSAS],!MODULE[kOSProcessor]]:NEEDS[kOS]:Final
{
	MODULE
	{
		name = kOSProcessor
		diskSpace = 25000
	}
}



//Default Hibernate in Warp to Auto
//Author: Alshain
@PART[*]:HAS[@MODULE[ModuleCommand]:HAS[#hasHibernation[True]]]:FINAL
{
	@MODULE[ModuleCommand] 
	{
		%hibernateOnWarp = true
	}
}